(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{620:function(v,_,p){"use strict";p.r(_);var r=p(10),l=Object(r.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("p",[v._v("方法还是要动手去尝试才能记得住。")]),v._v(" "),p("h2",{attrs:{id:"array"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[v._v("#")]),v._v(" Array")]),v._v(" "),p("h3",{attrs:{id:"数组的方法"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#数组的方法"}},[v._v("#")]),v._v(" 数组的方法")]),v._v(" "),p("ul",[p("li",[v._v("join();")])]),v._v(" "),p("p",[v._v("用来在数组项之间添加连接符。")]),v._v(" "),p("p",[v._v("参数不填时默认为"),p("code",[v._v(",")]),v._v("，还可以是任意连接符或字符串或数字。")]),v._v(" "),p("p",[v._v("返回新的字符串。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("reverse();")])]),v._v(" "),p("p",[v._v("将数组逆序。")]),v._v(" "),p("p",[v._v("没有参数。")]),v._v(" "),p("p",[v._v("返回修改后的原数组（破坏性）。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("sort();")])]),v._v(" "),p("p",[v._v("数组排序。")]),v._v(" "),p("p",[v._v("参数不填时默认按照字母顺序排序。也可以传入比较函数来实现从大到小或从小到大排序。")]),v._v(" "),p("p",[v._v("返回修改后的原数组（破坏性）。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("concat();")])]),v._v(" "),p("p",[v._v("合并数组。")]),v._v(" "),p("p",[v._v("参数为想要与原数组合并的项和数组。可以一起填写数字和数组，也可以填写二维数组。")]),v._v(" "),p("p",[v._v("返回新数组，不修改原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("slice();")])]),v._v(" "),p("p",[v._v("切割数组。")]),v._v(" "),p("p",[v._v("传入不多于2个参数，第一个是切割起始点，第二个是切割终止点，左闭右开。当参数为负值时，表示倒数的第几个。当没有第二个参数是，表示终止点为数组最长的位置。")]),v._v(" "),p("p",[v._v("返回新数组，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("splice();")])]),v._v(" "),p("p",[v._v("数组拼接。")]),v._v(" "),p("p",[v._v("当参数为空时，清除数组的所有内容。当有一个参数时，从该位置到数组结束")]),v._v(" "),p("p",[v._v("作为新数组。当有两个参数时，从第一个到第二个点之间的作为新数组（左闭右开）。当有三个或以上的参数时，后面的参数依次插入原数组被删除的位置。")]),v._v(" "),p("p",[v._v("返回新数组，原数组被修改，余下的为原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("forEach();")])]),v._v(" "),p("p",[v._v("遍历数组。")]),v._v(" "),p("p",[v._v("传入操作方法。")]),v._v(" "),p("p",[v._v("不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("map();")])]),v._v(" "),p("p",[v._v("数组映射。")]),v._v(" "),p("p",[v._v("传入操作方法。")]),v._v(" "),p("p",[v._v("返回映射的数组，原数组不改变。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("filter();")])]),v._v(" "),p("p",[v._v("数组过滤。")]),v._v(" "),p("p",[v._v("传入操作方法。")]),v._v(" "),p("p",[v._v("返回过滤得到的数组，原数组不改变。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("every();")])]),v._v(" "),p("p",[v._v("判断条件的与。")]),v._v(" "),p("p",[v._v("传入操作函数。全部符合为true，有一个不符合就是false。")]),v._v(" "),p("p",[v._v("返回布尔值，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("some();")])]),v._v(" "),p("p",[v._v("判断条件的或。")]),v._v(" "),p("p",[v._v("传入操作函数。有一个符合就是true，全部不符合是false。")]),v._v(" "),p("p",[v._v("返回布尔值，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("reduce();")])]),v._v(" "),p("p",[v._v("按顺序对数组元素两两操作。")]),v._v(" "),p("p",[v._v("传入操作函数。")]),v._v(" "),p("p",[v._v("返回操作结果，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("reduceRight();")])]),v._v(" "),p("p",[v._v("从后往前对数组元素两两操作。")]),v._v(" "),p("p",[v._v("传入操作函数。")]),v._v(" "),p("p",[v._v("返回操作结果，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("indexOf();")])]),v._v(" "),p("p",[v._v("数组检索。")]),v._v(" "),p("p",[v._v("当有一个参数，表示查找元素在数组中第一次出现的位置。有两个参数时，表示从第二个参数开始，查找第一个参数在数组中第一次出现的位置。")]),v._v(" "),p("p",[v._v("返回位置，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("lastIndexOf();")])]),v._v(" "),p("p",[v._v("反向数组检索。")]),v._v(" "),p("p",[v._v("当有一个参数，表示查找元素在数组中第一次出现的位置。有两个参数时，表示到第二个参数结束，查找第一个参数在数组中第一次出现的位置。")]),v._v(" "),p("p",[v._v("返回位置，不影响原数组。")]),v._v(" "),p("hr"),v._v(" "),p("ul",[p("li",[v._v("Array.isArray();")])]),v._v(" "),p("p",[v._v("判断是否是数组。")]),v._v(" "),p("p",[v._v("参数是需要检查的数组。")]),v._v(" "),p("p",[v._v("返回布尔值，不影响原数组。")])])}),[],!1,null,null,null);_.default=l.exports}}]);